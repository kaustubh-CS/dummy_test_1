name: Talisman

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Expect, jq and Python
      run: sudo apt-get install -y expect jq python3 python3-pip

    - name: Install Python packages
      run: pip install pandas json2html tabulate

    - name: Install Talisman
      run: |
        curl --silent https://thoughtworks.github.io/talisman/scripts/install.bash > install.bash
        chmod +x install.bash
        expect -c '
        set timeout -1
        spawn ./install.bash --pre-push
        expect "PLEASE CHOOSE WHERE YOU WISH TO SET TALISMAN_HOME VARIABLE AND talisman binary PATH (Enter option number): "
        send "4\r"
        expect "No git template directory is configured. Let'\''s add one."
        send "1\r"
        interact
        '
    - name: Install Talisman HTML Report
      run: |
        curl https://github.com/jaydeepc/talisman-html-report/archive/v1.3.zip  -o ~/.talisman/talisman_html_report.zip -J -L
        cd ~/.talisman
        unzip talisman_html_report.zip -d .
        mv talisman-html-report-1.3 talisman_html_report
        rm talisman_html_report.zip
    - name: Install wkhtmltopdf
      run: |
       sudo apt-get install -y wkhtmltopdf
    - name: Run Talisman
      run: |
        ~/.talisman/bin/talisman_linux_amd64 --scan > talisman_report.json 2> talisman_error.txt
        ~/.talisman/bin/talisman_linux_amd64 --scanWithHtml 2> talisman_html_error.txt
      continue-on-error: true
    - name: Print Talisman report neatly
      run: |
        python3 -c "
        import json
        import pandas as pd
        from tabulate import tabulate
        with open('talisman_report/talisman_reports/data/report.json') as f:
          data = json.load(f)
        df = pd.json_normalize(data['results'], 'failure_list', ['filename'])
        df['commits'] = df['commits'].apply(lambda x: x[:3] if len(x) > 3 else x)
        print(tabulate(df, headers='keys',tablefmt='psql', showindex=False))
        "
    - name: Convert JSON to HTML
      run: |
        python3 -c "
        import json
        import os
        from json2html import *
        with open('talisman_report/talisman_reports/data/report.json') as f:
            data = json.load(f)
        html = json2html.convert(json = data)
        os.makedirs('talisman_html_report', exist_ok=True)
        with open('talisman_html_report/report.html', 'w') as f:
            f.write(html)
        "
    - name: Convert HTML report to PDF
      run: |
        wkhtmltopdf talisman_html_report/report.html talisman_report.pdf
    - name: Upload PDF report
      uses: actions/upload-artifact@v2
      with:
        name: talisman-report-pdf
        path: talisman_report.pdf
    - name: Upload HTML report
      uses: actions/upload-artifact@v2
      with:
        name: talisman-report
        path: talisman_html_report/